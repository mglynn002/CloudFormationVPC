AWSTemplateFormatVersion: '2010-09-09'
Description: 'Security Stack for Alpha-Bravo Multi-VPC Infrastructure'

# ----------------------------------------------------------------------------
# Template created by Mark Glynn
# Security components for Multi-VPC infrastructure
# Includes Security Groups, Network ACLs, and their associations
# ----------------------------------------------------------------------------

Parameters:
  AlphaVPCID:
    Description: ID of the Alpha VPC
    Type: String

  BravoVPCID:
    Description: ID of the Bravo VPC
    Type: String

  AlphaVPCCIDR:
    Description: CIDR block for Alpha VPC
    Type: String
    Default: 10.0.0.0/16

  BravoVPCCIDR:
    Description: CIDR block for Bravo VPC
    Type: String
    Default: 10.1.0.0/16

  AlphaPublicSubnet1ID:
    Description: ID of the Alpha Public Subnet 1
    Type: String

  AlphaPublicSubnet2ID:
    Description: ID of the Alpha Public Subnet 2
    Type: String

  AlphaPublicSubnet3ID:
    Description: ID of the Alpha Public Subnet 3
    Type: String

  AlphaPrivateSubnet1ID:
    Description: ID of the Alpha Private Subnet 1
    Type: String

  AlphaPrivateSubnet2ID:
    Description: ID of the Alpha Private Subnet 2
    Type: String

  AlphaPrivateSubnet3ID:
    Description: ID of the Alpha Private Subnet 3
    Type: String

  BravoPublicSubnet1ID:
    Description: ID of the Bravo Public Subnet 1
    Type: String

  BravoPublicSubnet2ID:
    Description: ID of the Bravo Public Subnet 2
    Type: String

  BravoPublicSubnet3ID:
    Description: ID of the Bravo Public Subnet 3
    Type: String

  BravoPrivateSubnet1ID:
    Description: ID of the Bravo Private Subnet 1
    Type: String

  BravoPrivateSubnet2ID:
    Description: ID of the Bravo Private Subnet 2
    Type: String

  BravoPrivateSubnet3ID:
    Description: ID of the Bravo Private Subnet 3
    Type: String

Resources:
  # Network ACLs for Alpha
  AlphaPublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref AlphaVPCID
      Tags:
        - Key: Name
          Value: Alpha-Public-NACL

  AlphaPrivateSubnet1NACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref AlphaVPCID
      Tags:
        - Key: Name
          Value: Alpha-PrivateSubnet1-NACL
        - Key: Environment
          Value: AlphaBravoLab

  # Network ACLs for Bravo
  BravoPublicNACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref BravoVPCID
      Tags:
        - Key: Name
          Value: Bravo-Public-NACL

  BravoPrivateSubnet1NACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref BravoVPCID
      Tags:
        - Key: Name
          Value: Bravo-PrivateSubnet1-NACL
        - Key: Environment
          Value: AlphaBravoLab

  # Public NACL Rules for Alpha
  # Inbound Rules
  AlphaPublicNACLInboundHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  AlphaPublicNACLInboundHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  AlphaPublicNACLInboundSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22

  AlphaPublicNACLInboundEphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 130
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  # Outbound Rules for Alpha Public
  AlphaPublicNACLOutboundHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  AlphaPublicNACLOutboundHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  AlphaPublicNACLOutboundSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22

  AlphaPublicNACLOutboundEphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPublicNACL
      RuleNumber: 130
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  # Private NACL Rules for Alpha
  # Inbound Rules - Updated based on screenshot
  AlphaPrivateSubnet1NACLEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 10.0.0.0/8

  # Allow inbound ephemeral ports for responses
  AlphaPrivateSubnet1NACLEntry120:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  # Default deny rule 
  AlphaPrivateSubnet1NACLEntryDefault:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL
      RuleNumber: 32700  
      Protocol: -1
      RuleAction: deny
      Egress: false
      CidrBlock: 0.0.0.0/0

  # Outbound Rules for Alpha Private Subnet
  AlphaPrivateSubnet1NACLOutboundEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  
  # Default deny outbound rule
  AlphaPrivateSubnet1NACLOutboundEntryDefault:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL
      RuleNumber: 32701  
      Protocol: -1
      RuleAction: deny
      Egress: true
      CidrBlock: 0.0.0.0/0

  # Public NACL Rules for Bravo
  # Inbound Rules
  BravoPublicNACLInboundHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  BravoPublicNACLInboundHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  BravoPublicNACLInboundSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22

  BravoPublicNACLInboundEphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 130
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  # Outbound Rules for Bravo Public
  BravoPublicNACLOutboundHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  BravoPublicNACLOutboundHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  BravoPublicNACLOutboundSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22

  BravoPublicNACLOutboundEphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPublicNACL
      RuleNumber: 130
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  # NACL Associations for Alpha
  AlphaPublicSubnet1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPublicSubnet1ID
      NetworkAclId: !Ref AlphaPublicNACL

  AlphaPublicSubnet2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPublicSubnet2ID
      NetworkAclId: !Ref AlphaPublicNACL

  AlphaPublicSubnet3NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPublicSubnet3ID
      NetworkAclId: !Ref AlphaPublicNACL

  AlphaPrivateSubnet1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPrivateSubnet1ID
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL

  AlphaPrivateSubnet2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPrivateSubnet2ID
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL

  AlphaPrivateSubnet3NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref AlphaPrivateSubnet3ID
      NetworkAclId: !Ref AlphaPrivateSubnet1NACL

  # NACL Associations for Bravo
  BravoPublicSubnet1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPublicSubnet1ID
      NetworkAclId: !Ref BravoPublicNACL

  BravoPublicSubnet2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPublicSubnet2ID
      NetworkAclId: !Ref BravoPublicNACL

  BravoPublicSubnet3NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPublicSubnet3ID
      NetworkAclId: !Ref BravoPublicNACL

  BravoPrivateSubnet1NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPrivateSubnet1ID
      NetworkAclId: !Ref BravoPrivateSubnet1NACL

  BravoPrivateSubnet2NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPrivateSubnet2ID
      NetworkAclId: !Ref BravoPrivateSubnet1NACL

  BravoPrivateSubnet3NACLAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref BravoPrivateSubnet3ID
      NetworkAclId: !Ref BravoPrivateSubnet1NACL
  
  # Security Group for EC2 Instances
  CommonSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Common security group for all VPCs
      VpcId: !Ref AlphaVPCID
      SecurityGroupIngress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
          Description: Allow all traffic for demonstration purposes
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      Tags:
        - Key: Name
          Value: Common-SG

  AlphaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Alpha VPC
      VpcId: !Ref AlphaVPCID
      SecurityGroupIngress:
        - IpProtocol: all
          CidrIp: 10.0.0.0/8
          Description: Allow all traffic from 10.0.0.0/8
        - IpProtocol: all
          CidrIp: !Ref AlphaVPCCIDR
          Description: Allow all traffic from VPC
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: !Ref BravoVPCCIDR
          Description: Allow ICMP specifically from Bravo VPC
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      Tags:
        - Key: Name
          Value: Alpha-SG

  BravoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bravo VPC
      VpcId: !Ref BravoVPCID
      SecurityGroupIngress:
        - IpProtocol: all
          CidrIp: 10.0.0.0/8
          Description: Allow all traffic from 10.0.0.0/8
        - IpProtocol: all
          CidrIp: !Ref BravoVPCCIDR
          Description: Allow all traffic from VPC
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: !Ref AlphaVPCCIDR
          Description: Allow ICMP specifically from Alpha VPC
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic
      Tags:
        - Key: Name
          Value: Bravo-SG

  # Private NACL Rules for Bravo - Updated based on screenshot
  # Inbound Rules
  BravoPrivateSubnet1NACLInboundEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPrivateSubnet1NACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0

  # Default deny inbound rule
  BravoPrivateSubnet1NACLInboundEntryDefault:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPrivateSubnet1NACL
      RuleNumber: 32702  
      Protocol: -1
      RuleAction: deny
      Egress: false
      CidrBlock: 0.0.0.0/0

  # Outbound Rules for Bravo
  BravoPrivateSubnet1NACLOutboundEntry100:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPrivateSubnet1NACL
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

  # Default deny outbound rule
  BravoPrivateSubnet1NACLOutboundEntryDefault:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref BravoPrivateSubnet1NACL
      RuleNumber: 32703  
      Protocol: -1
      RuleAction: deny
      Egress: true
      CidrBlock: 0.0.0.0/0

Outputs:
  CommonSecurityGroupID:
    Description: ID of the Common Security Group
    Value: !Ref CommonSecurityGroup

  AlphaEC2SG:
    Description: Security Group for Alpha EC2
    Value: !Ref AlphaSecurityGroup

  BravoEC2SG:
    Description: Security Group for Bravo EC2
    Value: !Ref BravoSecurityGroup 